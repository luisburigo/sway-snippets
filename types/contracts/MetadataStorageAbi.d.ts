/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.79.0
  Forc version: 0.49.3
  Fuel-Core version: 0.22.1
*/

import type {
  BigNumberish,
  BN,
  Bytes,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
  StdString,
} from 'fuels';

import type { Vec } from "./common";

export type MetadataInput = { key: Bytes, value: Bytes };
export type MetadataOutput = MetadataInput;
export type RawBytesInput = { ptr: BigNumberish, cap: BigNumberish };
export type RawBytesOutput = { ptr: BN, cap: BN };

interface MetadataStorageAbiInterface extends Interface {
  functions: {
    add: FunctionFragment;
    get_all: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'add', values: [StdString, MetadataInput]): Uint8Array;
  encodeFunctionData(functionFragment: 'get_all', values: [StdString]): Uint8Array;

  decodeFunctionData(functionFragment: 'add', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'get_all', data: BytesLike): DecodedValue;
}

export class MetadataStorageAbi extends Contract {
  interface: MetadataStorageAbiInterface;
  functions: {
    add: InvokeFunction<[username: StdString, metadata: MetadataInput], void>;
    get_all: InvokeFunction<[username: StdString], Vec<MetadataOutput>>;
  };
}
